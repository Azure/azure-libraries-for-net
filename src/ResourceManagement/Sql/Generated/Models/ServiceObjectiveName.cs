// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Fluent.Models
{
    using Management.ResourceManager;
    using Management.ResourceManager.Fluent;
    using Management.ResourceManager.Fluent.Core;

    using Newtonsoft.Json;
    /// <summary>
    /// Defines values for ServiceObjectiveName.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(Management.ResourceManager.Fluent.Core.ExpandableStringEnumConverter<ServiceObjectiveName>))]
    public class ServiceObjectiveName : Management.ResourceManager.Fluent.Core.ExpandableStringEnum<ServiceObjectiveName>
    {
        public static readonly ServiceObjectiveName System = Parse("System");
        public static readonly ServiceObjectiveName System0 = Parse("System0");
        public static readonly ServiceObjectiveName System1 = Parse("System1");
        public static readonly ServiceObjectiveName System2 = Parse("System2");
        public static readonly ServiceObjectiveName System3 = Parse("System3");
        public static readonly ServiceObjectiveName System4 = Parse("System4");
        public static readonly ServiceObjectiveName System2L = Parse("System2L");
        public static readonly ServiceObjectiveName System3L = Parse("System3L");
        public static readonly ServiceObjectiveName System4L = Parse("System4L");
        public static readonly ServiceObjectiveName Free = Parse("Free");
        public static readonly ServiceObjectiveName Basic = Parse("Basic");
        public static readonly ServiceObjectiveName S0 = Parse("S0");
        public static readonly ServiceObjectiveName S1 = Parse("S1");
        public static readonly ServiceObjectiveName S2 = Parse("S2");
        public static readonly ServiceObjectiveName S3 = Parse("S3");
        public static readonly ServiceObjectiveName S4 = Parse("S4");
        public static readonly ServiceObjectiveName S6 = Parse("S6");
        public static readonly ServiceObjectiveName S7 = Parse("S7");
        public static readonly ServiceObjectiveName S9 = Parse("S9");
        public static readonly ServiceObjectiveName S12 = Parse("S12");
        public static readonly ServiceObjectiveName P1 = Parse("P1");
        public static readonly ServiceObjectiveName P2 = Parse("P2");
        public static readonly ServiceObjectiveName P3 = Parse("P3");
        public static readonly ServiceObjectiveName P4 = Parse("P4");
        public static readonly ServiceObjectiveName P6 = Parse("P6");
        public static readonly ServiceObjectiveName P11 = Parse("P11");
        public static readonly ServiceObjectiveName P15 = Parse("P15");
        public static readonly ServiceObjectiveName PRS1 = Parse("PRS1");
        public static readonly ServiceObjectiveName PRS2 = Parse("PRS2");
        public static readonly ServiceObjectiveName PRS4 = Parse("PRS4");
        public static readonly ServiceObjectiveName PRS6 = Parse("PRS6");
        public static readonly ServiceObjectiveName DW100 = Parse("DW100");
        public static readonly ServiceObjectiveName DW200 = Parse("DW200");
        public static readonly ServiceObjectiveName DW300 = Parse("DW300");
        public static readonly ServiceObjectiveName DW400 = Parse("DW400");
        public static readonly ServiceObjectiveName DW500 = Parse("DW500");
        public static readonly ServiceObjectiveName DW600 = Parse("DW600");
        public static readonly ServiceObjectiveName DW1000 = Parse("DW1000");
        public static readonly ServiceObjectiveName DW1200 = Parse("DW1200");
        public static readonly ServiceObjectiveName DW1000c = Parse("DW1000c");
        public static readonly ServiceObjectiveName DW1500 = Parse("DW1500");
        public static readonly ServiceObjectiveName DW1500c = Parse("DW1500c");
        public static readonly ServiceObjectiveName DW2000 = Parse("DW2000");
        public static readonly ServiceObjectiveName DW2000c = Parse("DW2000c");
        public static readonly ServiceObjectiveName DW3000 = Parse("DW3000");
        public static readonly ServiceObjectiveName DW2500c = Parse("DW2500c");
        public static readonly ServiceObjectiveName DW3000c = Parse("DW3000c");
        public static readonly ServiceObjectiveName DW6000 = Parse("DW6000");
        public static readonly ServiceObjectiveName DW5000c = Parse("DW5000c");
        public static readonly ServiceObjectiveName DW6000c = Parse("DW6000c");
        public static readonly ServiceObjectiveName DW7500c = Parse("DW7500c");
        public static readonly ServiceObjectiveName DW10000c = Parse("DW10000c");
        public static readonly ServiceObjectiveName DW15000c = Parse("DW15000c");
        public static readonly ServiceObjectiveName DW30000c = Parse("DW30000c");
        public static readonly ServiceObjectiveName DS100 = Parse("DS100");
        public static readonly ServiceObjectiveName DS200 = Parse("DS200");
        public static readonly ServiceObjectiveName DS300 = Parse("DS300");
        public static readonly ServiceObjectiveName DS400 = Parse("DS400");
        public static readonly ServiceObjectiveName DS500 = Parse("DS500");
        public static readonly ServiceObjectiveName DS600 = Parse("DS600");
        public static readonly ServiceObjectiveName DS1000 = Parse("DS1000");
        public static readonly ServiceObjectiveName DS1200 = Parse("DS1200");
        public static readonly ServiceObjectiveName DS1500 = Parse("DS1500");
        public static readonly ServiceObjectiveName DS2000 = Parse("DS2000");
        public static readonly ServiceObjectiveName ElasticPool = Parse("ElasticPool");
    }
}
