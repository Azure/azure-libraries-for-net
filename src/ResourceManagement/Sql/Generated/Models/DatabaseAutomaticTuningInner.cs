// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Fluent.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Database-level Automatic Tuning.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DatabaseAutomaticTuningInner : ProxyResourceInner
    {
        /// <summary>
        /// Initializes a new instance of the DatabaseAutomaticTuningInner
        /// class.
        /// </summary>
        public DatabaseAutomaticTuningInner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatabaseAutomaticTuningInner
        /// class.
        /// </summary>
        /// <param name="desiredState">Automatic tuning desired state. Possible
        /// values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'</param>
        /// <param name="actualState">Automatic tuning actual state. Possible
        /// values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'</param>
        /// <param name="options">Automatic tuning options definition.</param>
        public DatabaseAutomaticTuningInner(string id = default(string), string name = default(string), string type = default(string), AutomaticTuningMode? desiredState = default(AutomaticTuningMode?), AutomaticTuningMode? actualState = default(AutomaticTuningMode?), IDictionary<string, AutomaticTuningOptions> options = default(IDictionary<string, AutomaticTuningOptions>))
            : base(id, name, type)
        {
            DesiredState = desiredState;
            ActualState = actualState;
            Options = options;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets automatic tuning desired state. Possible values
        /// include: 'Inherit', 'Custom', 'Auto', 'Unspecified'
        /// </summary>
        [JsonProperty(PropertyName = "properties.desiredState")]
        public AutomaticTuningMode? DesiredState { get; set; }

        /// <summary>
        /// Gets automatic tuning actual state. Possible values include:
        /// 'Inherit', 'Custom', 'Auto', 'Unspecified'
        /// </summary>
        [JsonProperty(PropertyName = "properties.actualState")]
        public AutomaticTuningMode? ActualState { get; private set; }

        /// <summary>
        /// Gets or sets automatic tuning options definition.
        /// </summary>
        [JsonProperty(PropertyName = "properties.options")]
        public IDictionary<string, AutomaticTuningOptions> Options { get; set; }

    }
}
