// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Redis.Fluent.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties of upgrade notification.
    /// </summary>
    public partial class UpgradeNotification
    {
        /// <summary>
        /// Initializes a new instance of the UpgradeNotification class.
        /// </summary>
        public UpgradeNotification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpgradeNotification class.
        /// </summary>
        /// <param name="name">Name of upgrade notification.</param>
        /// <param name="timestamp">Timestamp when upgrade notification
        /// occured.</param>
        /// <param name="upsellNotification">Details about this upgrade
        /// notification</param>
        public UpgradeNotification(string name = default(string), System.DateTime? timestamp = default(System.DateTime?), IDictionary<string, string> upsellNotification = default(IDictionary<string, string>))
        {
            Name = name;
            Timestamp = timestamp;
            UpsellNotification = upsellNotification;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of upgrade notification.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets timestamp when upgrade notification occured.
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; private set; }

        /// <summary>
        /// Gets details about this upgrade notification
        /// </summary>
        [JsonProperty(PropertyName = "upsellNotification")]
        public IDictionary<string, string> UpsellNotification { get; private set; }

    }
}
