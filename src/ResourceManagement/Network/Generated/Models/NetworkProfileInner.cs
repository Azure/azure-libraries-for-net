// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using Microsoft.Azure.Management.ResourceManager;
    using Microsoft.Azure.Management.ResourceManager.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Network profile resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NetworkProfileInner : Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the NetworkProfileInner class.
        /// </summary>
        public NetworkProfileInner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkProfileInner class.
        /// </summary>
        /// <param name="containerNetworkInterfaces">List of child container
        /// network interfaces.</param>
        /// <param name="containerNetworkInterfaceConfigurations">List of chid
        /// container network interface configurations.</param>
        /// <param name="resourceGuid">The resource GUID property of the
        /// network interface resource.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// resource.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public NetworkProfileInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<ContainerNetworkInterfaceInner> containerNetworkInterfaces = default(IList<ContainerNetworkInterfaceInner>), IList<ContainerNetworkInterfaceConfigurationInner> containerNetworkInterfaceConfigurations = default(IList<ContainerNetworkInterfaceConfigurationInner>), string resourceGuid = default(string), string provisioningState = default(string), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            ContainerNetworkInterfaces = containerNetworkInterfaces;
            ContainerNetworkInterfaceConfigurations = containerNetworkInterfaceConfigurations;
            ResourceGuid = resourceGuid;
            ProvisioningState = provisioningState;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of child container network interfaces.
        /// </summary>
        [JsonProperty(PropertyName = "properties.containerNetworkInterfaces")]
        public IList<ContainerNetworkInterfaceInner> ContainerNetworkInterfaces { get; set; }

        /// <summary>
        /// Gets or sets list of chid container network interface
        /// configurations.
        /// </summary>
        [JsonProperty(PropertyName = "properties.containerNetworkInterfaceConfigurations")]
        public IList<ContainerNetworkInterfaceConfigurationInner> ContainerNetworkInterfaceConfigurations { get; set; }

        /// <summary>
        /// Gets the resource GUID property of the network interface resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets a unique read-only string that changes whenever the
        /// resource is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
