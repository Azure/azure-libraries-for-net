// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// List of connection states snapshots.
    /// </summary>
    public partial class ConnectionMonitorQueryResultInner
    {
        /// <summary>
        /// Initializes a new instance of the ConnectionMonitorQueryResultInner
        /// class.
        /// </summary>
        public ConnectionMonitorQueryResultInner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectionMonitorQueryResultInner
        /// class.
        /// </summary>
        /// <param name="sourceStatus">Status of connection monitor source.
        /// Possible values include: 'Unknown', 'Active', 'Inactive'</param>
        /// <param name="states">Information about connection states.</param>
        public ConnectionMonitorQueryResultInner(ConnectionMonitorSourceStatus sourceStatus = default(ConnectionMonitorSourceStatus), IList<ConnectionStateSnapshot> states = default(IList<ConnectionStateSnapshot>))
        {
            SourceStatus = sourceStatus;
            States = states;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets status of connection monitor source. Possible values
        /// include: 'Unknown', 'Active', 'Inactive'
        /// </summary>
        [JsonProperty(PropertyName = "sourceStatus")]
        public ConnectionMonitorSourceStatus SourceStatus { get; set; }

        /// <summary>
        /// Gets or sets information about connection states.
        /// </summary>
        [JsonProperty(PropertyName = "states")]
        public IList<ConnectionStateSnapshot> States { get; set; }

    }
}
