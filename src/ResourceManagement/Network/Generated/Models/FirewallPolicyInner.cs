// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using Microsoft.Azure.Management.ResourceManager;
    using Microsoft.Azure.Management.ResourceManager.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// FirewallPolicy Resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class FirewallPolicyInner : Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the FirewallPolicyInner class.
        /// </summary>
        public FirewallPolicyInner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FirewallPolicyInner class.
        /// </summary>
        /// <param name="ruleGroups">List of references to
        /// FirewallPolicyRuleGroups.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// firewall policy resource. Possible values include: 'Succeeded',
        /// 'Updating', 'Deleting', 'Failed'</param>
        /// <param name="basePolicy">The parent firewall policy from which
        /// rules are inherited.</param>
        /// <param name="firewalls">List of references to Azure Firewalls that
        /// this Firewall Policy is associated with.</param>
        /// <param name="childPolicies">List of references to Child Firewall
        /// Policies.</param>
        /// <param name="threatIntelMode">The operation mode for Threat
        /// Intelligence. Possible values include: 'Alert', 'Deny',
        /// 'Off'</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public FirewallPolicyInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<Management.ResourceManager.Fluent.SubResource> ruleGroups = default(IList<Management.ResourceManager.Fluent.SubResource>), ProvisioningState provisioningState = default(ProvisioningState), Management.ResourceManager.Fluent.SubResource basePolicy = default(Management.ResourceManager.Fluent.SubResource), IList<Management.ResourceManager.Fluent.SubResource> firewalls = default(IList<Management.ResourceManager.Fluent.SubResource>), IList<Management.ResourceManager.Fluent.SubResource> childPolicies = default(IList<Management.ResourceManager.Fluent.SubResource>), AzureFirewallThreatIntelMode threatIntelMode = default(AzureFirewallThreatIntelMode), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            RuleGroups = ruleGroups;
            ProvisioningState = provisioningState;
            BasePolicy = basePolicy;
            Firewalls = firewalls;
            ChildPolicies = childPolicies;
            ThreatIntelMode = threatIntelMode;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets list of references to FirewallPolicyRuleGroups.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ruleGroups")]
        public IList<Management.ResourceManager.Fluent.SubResource> RuleGroups { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the firewall policy resource.
        /// Possible values include: 'Succeeded', 'Updating', 'Deleting',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public ProvisioningState ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the parent firewall policy from which rules are
        /// inherited.
        /// </summary>
        [JsonProperty(PropertyName = "properties.basePolicy")]
        public Management.ResourceManager.Fluent.SubResource BasePolicy { get; set; }

        /// <summary>
        /// Gets list of references to Azure Firewalls that this Firewall
        /// Policy is associated with.
        /// </summary>
        [JsonProperty(PropertyName = "properties.firewalls")]
        public IList<Management.ResourceManager.Fluent.SubResource> Firewalls { get; private set; }

        /// <summary>
        /// Gets list of references to Child Firewall Policies.
        /// </summary>
        [JsonProperty(PropertyName = "properties.childPolicies")]
        public IList<Management.ResourceManager.Fluent.SubResource> ChildPolicies { get; private set; }

        /// <summary>
        /// Gets or sets the operation mode for Threat Intelligence. Possible
        /// values include: 'Alert', 'Deny', 'Off'
        /// </summary>
        [JsonProperty(PropertyName = "properties.threatIntelMode")]
        public AzureFirewallThreatIntelMode ThreatIntelMode { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
