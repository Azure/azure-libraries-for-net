// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// DDoS custom policy properties.
    /// </summary>
    public partial class ProtocolCustomSettingsFormat
    {
        /// <summary>
        /// Initializes a new instance of the ProtocolCustomSettingsFormat
        /// class.
        /// </summary>
        public ProtocolCustomSettingsFormat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProtocolCustomSettingsFormat
        /// class.
        /// </summary>
        /// <param name="protocol">The protocol for which the DDoS protection
        /// policy is being customized. Possible values include: 'Tcp', 'Udp',
        /// 'Syn'</param>
        /// <param name="triggerRateOverride">The customized DDoS protection
        /// trigger rate.</param>
        /// <param name="sourceRateOverride">The customized DDoS protection
        /// source rate.</param>
        /// <param name="triggerSensitivityOverride">The customized DDoS
        /// protection trigger rate sensitivity degrees. High: Trigger rate set
        /// with most sensitivity w.r.t. normal traffic. Default: Trigger rate
        /// set with moderate sensitivity w.r.t. normal traffic. Low: Trigger
        /// rate set with less sensitivity w.r.t. normal traffic. Relaxed:
        /// Trigger rate set with least sensitivity w.r.t. normal traffic.
        /// Possible values include: 'Relaxed', 'Low', 'Default',
        /// 'High'</param>
        public ProtocolCustomSettingsFormat(DdosCustomPolicyProtocol protocol = default(DdosCustomPolicyProtocol), string triggerRateOverride = default(string), string sourceRateOverride = default(string), DdosCustomPolicyTriggerSensitivityOverride triggerSensitivityOverride = default(DdosCustomPolicyTriggerSensitivityOverride))
        {
            Protocol = protocol;
            TriggerRateOverride = triggerRateOverride;
            SourceRateOverride = sourceRateOverride;
            TriggerSensitivityOverride = triggerSensitivityOverride;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the protocol for which the DDoS protection policy is
        /// being customized. Possible values include: 'Tcp', 'Udp', 'Syn'
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public DdosCustomPolicyProtocol Protocol { get; set; }

        /// <summary>
        /// Gets or sets the customized DDoS protection trigger rate.
        /// </summary>
        [JsonProperty(PropertyName = "triggerRateOverride")]
        public string TriggerRateOverride { get; set; }

        /// <summary>
        /// Gets or sets the customized DDoS protection source rate.
        /// </summary>
        [JsonProperty(PropertyName = "sourceRateOverride")]
        public string SourceRateOverride { get; set; }

        /// <summary>
        /// Gets or sets the customized DDoS protection trigger rate
        /// sensitivity degrees. High: Trigger rate set with most sensitivity
        /// w.r.t. normal traffic. Default: Trigger rate set with moderate
        /// sensitivity w.r.t. normal traffic. Low: Trigger rate set with less
        /// sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with
        /// least sensitivity w.r.t. normal traffic. Possible values include:
        /// 'Relaxed', 'Low', 'Default', 'High'
        /// </summary>
        [JsonProperty(PropertyName = "triggerSensitivityOverride")]
        public DdosCustomPolicyTriggerSensitivityOverride TriggerSensitivityOverride { get; set; }

    }
}
