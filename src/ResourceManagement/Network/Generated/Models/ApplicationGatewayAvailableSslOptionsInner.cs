// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using Microsoft.Azure.Management.ResourceManager;
    using Microsoft.Azure.Management.ResourceManager.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Response for ApplicationGatewayAvailableSslOptions API service call.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ApplicationGatewayAvailableSslOptionsInner : Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationGatewayAvailableSslOptionsInner class.
        /// </summary>
        public ApplicationGatewayAvailableSslOptionsInner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationGatewayAvailableSslOptionsInner class.
        /// </summary>
        /// <param name="predefinedPolicies">List of available Ssl predefined
        /// policy.</param>
        /// <param name="defaultPolicy">Name of the Ssl predefined policy
        /// applied by default to application gateway. Possible values include:
        /// 'AppGwSslPolicy20150501', 'AppGwSslPolicy20170401',
        /// 'AppGwSslPolicy20170401S'</param>
        /// <param name="availableCipherSuites">List of available Ssl cipher
        /// suites.</param>
        /// <param name="availableProtocols">List of available Ssl
        /// protocols.</param>
        public ApplicationGatewayAvailableSslOptionsInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<Management.ResourceManager.Fluent.SubResource> predefinedPolicies = default(IList<Management.ResourceManager.Fluent.SubResource>), ApplicationGatewaySslPolicyName defaultPolicy = default(ApplicationGatewaySslPolicyName), IList<ApplicationGatewaySslCipherSuite> availableCipherSuites = default(IList<ApplicationGatewaySslCipherSuite>), IList<ApplicationGatewaySslProtocol> availableProtocols = default(IList<ApplicationGatewaySslProtocol>))
            : base(location, id, name, type, tags)
        {
            PredefinedPolicies = predefinedPolicies;
            DefaultPolicy = defaultPolicy;
            AvailableCipherSuites = availableCipherSuites;
            AvailableProtocols = availableProtocols;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of available Ssl predefined policy.
        /// </summary>
        [JsonProperty(PropertyName = "properties.predefinedPolicies")]
        public IList<Management.ResourceManager.Fluent.SubResource> PredefinedPolicies { get; set; }

        /// <summary>
        /// Gets or sets name of the Ssl predefined policy applied by default
        /// to application gateway. Possible values include:
        /// 'AppGwSslPolicy20150501', 'AppGwSslPolicy20170401',
        /// 'AppGwSslPolicy20170401S'
        /// </summary>
        [JsonProperty(PropertyName = "properties.defaultPolicy")]
        public ApplicationGatewaySslPolicyName DefaultPolicy { get; set; }

        /// <summary>
        /// Gets or sets list of available Ssl cipher suites.
        /// </summary>
        [JsonProperty(PropertyName = "properties.availableCipherSuites")]
        public IList<ApplicationGatewaySslCipherSuite> AvailableCipherSuites { get; set; }

        /// <summary>
        /// Gets or sets list of available Ssl protocols.
        /// </summary>
        [JsonProperty(PropertyName = "properties.availableProtocols")]
        public IList<ApplicationGatewaySslProtocol> AvailableProtocols { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
