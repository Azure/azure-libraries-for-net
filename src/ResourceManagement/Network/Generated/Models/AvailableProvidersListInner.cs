// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// List of available countries with details.
    /// </summary>
    public partial class AvailableProvidersListInner
    {
        /// <summary>
        /// Initializes a new instance of the AvailableProvidersListInner
        /// class.
        /// </summary>
        public AvailableProvidersListInner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvailableProvidersListInner
        /// class.
        /// </summary>
        /// <param name="countries">List of available countries.</param>
        public AvailableProvidersListInner(IList<AvailableProvidersListCountry> countries)
        {
            Countries = countries;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of available countries.
        /// </summary>
        [JsonProperty(PropertyName = "countries")]
        public IList<AvailableProvidersListCountry> Countries { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Countries == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Countries");
            }
        }
    }
}
