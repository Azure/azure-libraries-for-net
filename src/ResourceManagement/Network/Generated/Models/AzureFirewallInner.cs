// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using Microsoft.Azure.Management.ResourceManager;
    using Microsoft.Azure.Management.ResourceManager.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Azure Firewall resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AzureFirewallInner : Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the AzureFirewallInner class.
        /// </summary>
        public AzureFirewallInner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureFirewallInner class.
        /// </summary>
        /// <param name="applicationRuleCollections">Collection of application
        /// rule collections used by Azure Firewall.</param>
        /// <param name="natRuleCollections">Collection of NAT rule collections
        /// used by Azure Firewall.</param>
        /// <param name="networkRuleCollections">Collection of network rule
        /// collections used by Azure Firewall.</param>
        /// <param name="ipConfigurations">IP configuration of the Azure
        /// Firewall resource.</param>
        /// <param name="provisioningState">The provisioning state of the Azure
        /// firewall resource. Possible values include: 'Succeeded',
        /// 'Updating', 'Deleting', 'Failed'</param>
        /// <param name="threatIntelMode">The operation mode for Threat
        /// Intelligence. Possible values include: 'Alert', 'Deny',
        /// 'Off'</param>
        /// <param name="virtualHub">The virtualHub to which the firewall
        /// belongs.</param>
        /// <param name="firewallPolicy">The firewallPolicy associated with
        /// this azure firewall.</param>
        /// <param name="hubIpAddresses">IP addresses associated with
        /// AzureFirewall.</param>
        /// <param name="sku">The Azure Firewall Resource SKU.</param>
        /// <param name="additionalProperties">The additional properties used
        /// to further config this azure firewall.</param>
        /// <param name="zones">A list of availability zones denoting where the
        /// resource needs to come from.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public AzureFirewallInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IList<AzureFirewallApplicationRuleCollectionInner> applicationRuleCollections = default(IList<AzureFirewallApplicationRuleCollectionInner>), IList<AzureFirewallNatRuleCollectionInner> natRuleCollections = default(IList<AzureFirewallNatRuleCollectionInner>), IList<AzureFirewallNetworkRuleCollectionInner> networkRuleCollections = default(IList<AzureFirewallNetworkRuleCollectionInner>), IList<AzureFirewallIPConfigurationInner> ipConfigurations = default(IList<AzureFirewallIPConfigurationInner>), ProvisioningState provisioningState = default(ProvisioningState), AzureFirewallThreatIntelMode threatIntelMode = default(AzureFirewallThreatIntelMode), Management.ResourceManager.Fluent.SubResource virtualHub = default(Management.ResourceManager.Fluent.SubResource), Management.ResourceManager.Fluent.SubResource firewallPolicy = default(Management.ResourceManager.Fluent.SubResource), HubIPAddresses hubIpAddresses = default(HubIPAddresses), AzureFirewallSku sku = default(AzureFirewallSku), IDictionary<string, string> additionalProperties = default(IDictionary<string, string>), IList<string> zones = default(IList<string>), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            ApplicationRuleCollections = applicationRuleCollections;
            NatRuleCollections = natRuleCollections;
            NetworkRuleCollections = networkRuleCollections;
            IpConfigurations = ipConfigurations;
            ProvisioningState = provisioningState;
            ThreatIntelMode = threatIntelMode;
            VirtualHub = virtualHub;
            FirewallPolicy = firewallPolicy;
            HubIpAddresses = hubIpAddresses;
            Sku = sku;
            AdditionalProperties = additionalProperties;
            Zones = zones;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets collection of application rule collections used by
        /// Azure Firewall.
        /// </summary>
        [JsonProperty(PropertyName = "properties.applicationRuleCollections")]
        public IList<AzureFirewallApplicationRuleCollectionInner> ApplicationRuleCollections { get; set; }

        /// <summary>
        /// Gets or sets collection of NAT rule collections used by Azure
        /// Firewall.
        /// </summary>
        [JsonProperty(PropertyName = "properties.natRuleCollections")]
        public IList<AzureFirewallNatRuleCollectionInner> NatRuleCollections { get; set; }

        /// <summary>
        /// Gets or sets collection of network rule collections used by Azure
        /// Firewall.
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkRuleCollections")]
        public IList<AzureFirewallNetworkRuleCollectionInner> NetworkRuleCollections { get; set; }

        /// <summary>
        /// Gets or sets IP configuration of the Azure Firewall resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipConfigurations")]
        public IList<AzureFirewallIPConfigurationInner> IpConfigurations { get; set; }

        /// <summary>
        /// Gets the provisioning state of the Azure firewall resource.
        /// Possible values include: 'Succeeded', 'Updating', 'Deleting',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public ProvisioningState ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the operation mode for Threat Intelligence. Possible
        /// values include: 'Alert', 'Deny', 'Off'
        /// </summary>
        [JsonProperty(PropertyName = "properties.threatIntelMode")]
        public AzureFirewallThreatIntelMode ThreatIntelMode { get; set; }

        /// <summary>
        /// Gets or sets the virtualHub to which the firewall belongs.
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualHub")]
        public Management.ResourceManager.Fluent.SubResource VirtualHub { get; set; }

        /// <summary>
        /// Gets or sets the firewallPolicy associated with this azure
        /// firewall.
        /// </summary>
        [JsonProperty(PropertyName = "properties.firewallPolicy")]
        public Management.ResourceManager.Fluent.SubResource FirewallPolicy { get; set; }

        /// <summary>
        /// Gets IP addresses associated with AzureFirewall.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hubIpAddresses")]
        public HubIPAddresses HubIpAddresses { get; private set; }

        /// <summary>
        /// Gets or sets the Azure Firewall Resource SKU.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sku")]
        public AzureFirewallSku Sku { get; set; }

        /// <summary>
        /// Gets or sets the additional properties used to further config this
        /// azure firewall.
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalProperties")]
        public IDictionary<string, string> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets a list of availability zones denoting where the
        /// resource needs to come from.
        /// </summary>
        [JsonProperty(PropertyName = "zones")]
        public IList<string> Zones { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ApplicationRuleCollections != null)
            {
                foreach (var element in ApplicationRuleCollections)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (NatRuleCollections != null)
            {
                foreach (var element1 in NatRuleCollections)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (NetworkRuleCollections != null)
            {
                foreach (var element2 in NetworkRuleCollections)
                {
                    if (element2 != null)
                    {
                        element2.Validate();
                    }
                }
            }
        }
    }
}
