// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Fluent.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An Azure Cosmos DB resource throughput.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ThroughputSettingsGetResultsInner : ARMResourcePropertiesInner
    {
        /// <summary>
        /// Initializes a new instance of the ThroughputSettingsGetResultsInner
        /// class.
        /// </summary>
        public ThroughputSettingsGetResultsInner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ThroughputSettingsGetResultsInner
        /// class.
        /// </summary>
        /// <param name="throughput">Value of the Cosmos DB resource
        /// throughput</param>
        /// <param name="minimumThroughput">The minimum throughput of the
        /// resource</param>
        /// <param name="offerReplacePending">The throughput replace is
        /// pending</param>
        public ThroughputSettingsGetResultsInner(string location, int throughput, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string minimumThroughput = default(string), string offerReplacePending = default(string))
            : base(location, id, name, type, tags)
        {
            Throughput = throughput;
            MinimumThroughput = minimumThroughput;
            OfferReplacePending = offerReplacePending;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets value of the Cosmos DB resource throughput
        /// </summary>
        [JsonProperty(PropertyName = "properties.throughput")]
        public int Throughput { get; set; }

        /// <summary>
        /// Gets the minimum throughput of the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.minimumThroughput")]
        public string MinimumThroughput { get; private set; }

        /// <summary>
        /// Gets the throughput replace is pending
        /// </summary>
        [JsonProperty(PropertyName = "properties.offerReplacePending")]
        public string OfferReplacePending { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
