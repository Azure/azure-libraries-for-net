// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Fluent.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Part of Subscription diagnostic setting. Specifies the settings for a
    /// particular log.
    /// </summary>
    public partial class SubscriptionLogSettings
    {
        /// <summary>
        /// Initializes a new instance of the SubscriptionLogSettings class.
        /// </summary>
        public SubscriptionLogSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubscriptionLogSettings class.
        /// </summary>
        /// <param name="enabled">a value indicating whether this log is
        /// enabled.</param>
        /// <param name="category">Name of a Subscription Diagnostic Log
        /// category for a resource type this setting is applied to.</param>
        public SubscriptionLogSettings(bool enabled, string category = default(string))
        {
            Category = category;
            Enabled = enabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of a Subscription Diagnostic Log category for a
        /// resource type this setting is applied to.
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this log is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool Enabled { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
